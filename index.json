[{"content":"Task The goal of this Warman challenge is to create a small-scale prototype of a transport system that can collect and deliver six spherical vessels to their respective silos. This must be done within a 120-second time limit, otherwise, the robot must stop wherever it is currently at in the process. The official rules document.\nImage source: Warman Competition Rules Modules Scissor Lift Scooping Arm Deposit Mechanism Course Navigation Navigating the Track: Exploring Options\nOur group faced the challenge of ensuring the robot could reliably navigate the track. We considered two primary options:\nHardcode the Movements:\nGuessing the correct motor movements for a successful run. Adjusting values through trial and error. Use Sensors:\nEmploying sensors such as ultrasonic, infrared, and lidar. Exploring Pixy Camera Capabilities\nI had recently become aware of a product called the \u0026lsquo;Pixy Camera\u0026rsquo; and was interested to try out its capabilities as a means of track navigation. To be a viable solution, the pixy camera had to be able to detect the following reliably:\nTennis balls Squash balls Storage silos To test the pixy camera, I prototyped a small robot that follows a tennis ball based on its colour hue. Below is a short video demonstration. Click to view code on GitHub\nThe camera could successfully detect a tennis ball, but after attempting the same test on a squash ball at university, I realised the camera only detects objects that have a colour hue. This was a major problem since the squash balls are black, and the silos are white. Unfortunately this ruled out the use of the pixy camera in our robot.\nOutcome On the test day, our robot had some current drawage issues with the wheel-driving motors. This led to our robot not being able to overcome its own inertia. The challenge allowed for one \u0026ldquo;correction tap\u0026rdquo; of the robot during the test. Our group used this to help it overcome its inertia. Points were given for successfully holding tennis/squash balls, so our group changed its goal to sucessfully pick up three tennis balls by lining them up in a row.\n","permalink":"http://ryankembrey.github.io/projects/warman_challenge/","summary":"Designing a robot to complete a challenge","title":"Warman Design Challenge"},{"content":"I often find myself thinking of ways to automate repitive tasks. This led me to creating tex-init, a shell script designed to simplify the initiation of LaTeX projects. It offers a command-line interface (CLI) to select between predefined LaTeX templates, then creates the project structure and main .tex file. This article teaches you how to achieve a similiar setup.\nproject_name ├── figures │ ├── uts_logo.png │ └── title_image.png ├── sections │ ├── preamble.tex │ └── titlepage.tex ├── bib │ └── bibliography.bib ├── project_name.tex └── project_name.pdf Prerequisites Before diving into tex-init, make sure you have the following:\nA Linux system with a LaTeX distrubution installed A directory under ~/templates/latex containing: A directory named tex with your LaTeX templates A directory named sections with the files titlepage.tex and preamble.tex in it A directory named figures with the files logo.png ","permalink":"http://ryankembrey.github.io/blog/latex_automation/","summary":"How I create my LaTeX projects with minimal effort","title":"LaTeX Project Automation"}]